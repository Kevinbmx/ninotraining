services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
      - phpmyadmin
    networks:
      - ninotraining-network

  frontend:
    container_name: frontend
    build:
      context: ./ninotiendafront
      # target: dev
    restart: always
    environment:
      - TZ=America/La_Paz
      - NODE_ENV=development
    working_dir: /app
    volumes:
      - ./ninotiendafront:/app
      - /app/node_modules
    # ports:
    #   - "3000:3000" # Expone el frontend en http://localhost:3000
    command: [ "npm", "run", "dev" ]
    networks:
      - ninotraining-network

  # BACKEND - Laravel
  backend:
    build:
      context: ./ninotrainingBack
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    volumes:
      - ./ninotrainingBack:/var/www
    ports:
      - "8000:8000" # Expone el backend en http://localhost:8000
    depends_on:
      - mysql
    command: [ "php", "artisan", "serve", "--host=0.0.0.0", "--port=8000" ]
    networks:
      - ninotraining-network
    env_file:
      - ./ninotrainingBack/.env

  # DATABASE - MySQL
  mysql:
    image: mysql:8.0
    container_name: ninotraining_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ninotraining_db
      MYSQL_USER: ninotraining_user
      MYSQL_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      - ninotraining-network

  # ADMIN DB - phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ninotraining_phpmyadmin
    restart: always
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_USER: ninotraining_user
      PMA_PASSWORD: secret
      # ports:
      #   - "8080:80" # Accede a phpMyAdmin en http://localhost:8080
    networks:
      - ninotraining-network

networks:
  ninotraining-network:
    driver: bridge
